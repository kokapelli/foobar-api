# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-18 20:29
from __future__ import unicode_literals

import enum
from django.db.models import Sum
from django.db import migrations
from moneyed import Money


class TrxTypeOld(enum.Enum):
    INCOMING = 0
    OUTGOING = 1


class TrxType(enum.Enum):
    FINALIZED = 0
    PENDING = 1
    CANCELLATION = 2


class TrxStatus(enum.Enum):
    PENDING = 0
    FINALIZED = 1
    REJECTED = 2
    CANCELED = 3


def migrate_trxs(apps, schema_editor):
    WalletTransaction = apps.get_model("wallet", "WalletTransaction")
    incoming = WalletTransaction.objects \
        .filter(trx_status=TrxStatus.FINALIZED) \
        .filter(trx_type=TrxTypeOld.INCOMING) \
        .aggregate(amount=Sum('amount'))['amount'] or Money(0, 'SEK')
    outgoing = WalletTransaction.objects \
        .filter(trx_status__in=[TrxStatus.FINALIZED, TrxStatus.PENDING]) \
        .filter(trx_type=TrxTypeOld.OUTGOING) \
        .aggregate(amount=Sum('amount'))['amount'] or Money(0, 'SEK')
    pre_balance = incoming - outgoing
    for w in WalletTransaction.objects.all():
        if w.trx_type.value == TrxTypeOld.OUTGOING.value:
            w.amount *= -1
        assert w.trx_status.value != TrxStatus.PENDING.value
        if w.trx_status.value in [TrxStatus.CANCELED.value,
                                  TrxStatus.REJECTED.value]:
            cw = WalletTransaction.objects.create(
                wallet=w.wallet,
                amount=-w.amount,
                trx_type=TrxType.CANCELLATION,
                internal_reference=w,
                date_created=w.date_modified,
                date_modified=w.date_modified
            )
            cw.refresh_from_db()
            # Make sure that the chronological order is preserved
            assert cw.date_created == w.date_modified
        w.trx_type = TrxType.FINALIZED
        w.save()
    post_balance = WalletTransaction.objects \
        .exclude(trx_type=TrxType.PENDING) \
        .aggregate(amount=Sum('amount'))['amount'] or Money(0, 'SEK')
    # Make sure that the total balance in the system has not changed
    assert pre_balance == post_balance


class Migration(migrations.Migration):

    dependencies = [
        ('wallet', '0007_auto_20170218_2034'),
    ]

    operations = [
        migrations.RunPython(migrate_trxs)
    ]
